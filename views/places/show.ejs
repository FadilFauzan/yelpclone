<% layout('layouts/app') %>

<link rel="stylesheet" href="/css/starAbility.css">

<div class="row">
    <div class="col-6">
        <div class="card">
            <div id="carouselExample" class="carousel slide">
                <div class="carousel-inner">
                    <% if (place.images.length) { %>
                        <% place.images.forEach((image, index) => { %>
                            <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                <img src="/img/<%= image.filename %>" alt="<%= place.title %>" class="card-img-top">
                            </div>
                        <% }) %>
                    <% } else { %>
                        <img src="https://source.unsplash.com/1000x500/?/<%= place.title %>" alt="<%= place.title %>" 
                            class="img-fluid">
                    <% } %>
                </div>
                <% if (place.images.length > 1) { %>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                <% } %>
            </div>
            <div class="card-body">
                <h5 class="card-title"><%= place.title %></h5>
                <p class="card-text"> <%= place.description %></p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"> <%= place.location %></li>
                <li class="list-group-item">Author : <%= place.author.username %></li>
                <li class="list-group-item"> <%= place.price %></li>
            </ul>
            <% if (currentUser && place.author.equals(currentUser._id)) { %>
                <div class="card-body">
                    <a href="/places/<%= place._id %>/edit" class="btn btn-warning text-white">Edit</a>
                    <form action="/places/<%= place._id %>?_method=DELETE" method="post"
                        style="display: inline;">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            <% } %>
        </div>
    </div>

    <div class="col-6">
        <div style="width: 100%; height: 480px" id="mapContainer"></div>
        <% if (currentUser) { %>
            <h3>Leave a review</h3>
            <form action="/places/<%= place._id %>/reviews" method="post" class="validated-form mb-5" novalidate>
                <div class="my-3">
                    <label for="rating">Give a rating:</label>
                    <fieldset class="starability-basic mt-2">
                        <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="0" checked aria-label="No rating." />
                        <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                        <label for="first-rate1" title="Terrible">1 star</label>
                        <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                        <label for="first-rate2" title="Not good">2 stars</label>
                        <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                        <label for="first-rate3" title="Average">3 stars</label>
                        <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                        <label for="first-rate4" title="Very good">4 stars</label>
                        <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                        <label for="first-rate5" title="Amazing">5 stars</label>
                    </fieldset>
                </div>
                <div class="mb-3">
                    <label for="review">Review:</label>
                    <textarea name="review[body]" id="body" cols="30" rows="5" class="form-control mt-2" required></textarea>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div class="invalid-feedback">
                        Please fill out the field.
                    </div>
                </div>

                <button type="submit" class="btn btn-success">Submit</button>
            </form>
            <hr>
        <% } %>
        
        <h4>Reviews:</h4>
        <% if (place.reviews.length === 0) { %>
            <p class="fs-6 text-center my-5">There are no reviews for this place yet.</p>
        <% } %>

        <% for (const review of place.reviews) { %>
            <div class="my-3 card">
                <div class="card-body">
                    <h6>@<%= review.author.username %></h6>
                    <p class="starability-result mt-2" data-rating="<%= review.rating %>"></p>
                    <p class="card-text"><%= review.body %></p>
                    <% if (currentUser && review.author.equals(currentUser._id)) { %>
                        <form action="/places/<%= place._id %>/reviews/<%= review._id %>?_method=DELETE" method="post">
                            <button class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    <% } %>
                </div>
            </div>
        <% } %>
    </div>
</div>

<script>
    const place = <%- JSON.stringify(place) %>;
    const apiKey = "<%= apiKey %>";
    const placeLocation = { lng: place.geometry.coordinates[0], lat: place.geometry.coordinates[1] }
</script>

<script>
    function addMarker(group, coordinates, html) {
        const svgMarkup = `<svg width="40px" height="40px" viewBox="-4 0 36 36" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --> <title>map-marker</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="Vivid.JS" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="Vivid-Icons" transform="translate(-125.000000, -643.000000)"> <g id="Icons" transform="translate(37.000000, 169.000000)"> <g id="map-marker" transform="translate(78.000000, 468.000000)"> <g transform="translate(10.000000, 6.000000)"> <path d="M14,0 C21.732,0 28,5.641 28,12.6 C28,23.963 14,36 14,36 C14,36 0,24.064 0,12.6 C0,5.641 6.268,0 14,0 Z" id="Shape" fill="#ec4335"> </path> <circle id="Oval" fill="#882b2b" fill-rule="nonzero" cx="14" cy="14" r="7"> </circle> </g> </g> </g> </g> </g> </g></svg>`
        const icon = new H.map.Icon(svgMarkup)
        const marker = new H.map.Marker(placeLocation, { icon })
        marker.setData(html)
        group.addObject(marker)
    }

    function addInfoBubble(map) {
        const group = new H.map.Group()
        map.addObject(group)

        group.addEventListener('tap', (e) => {
            const bubble = new H.ui.InfoBubble(e.target.getGeometry(), {
                content: e.target.getData()
            })
            ui.addBubble(bubble)
        }, false)

        addMarker(group, placeLocation, `<div>${place.title}</div>` + `<div>${place.description}</div>` )
    }

    // Initialize the platform object
    const platform = new H.service.Platform({
        'apikey': apiKey
    });

    // Obtain the default map types from the platform object
    const defaultLayers = platform.createDefaultLayers();

    // Instantiate (and display) the map
    const map = new H.Map(
        document.getElementById('mapContainer'),
        defaultLayers.vector.normal.map,
        {
            zoom: 15,
            center: placeLocation
        });

    const ui = H.ui.UI.createDefault(map, defaultLayers, 'en-US')
    const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents((map)))

    addInfoBubble(map)
</script>